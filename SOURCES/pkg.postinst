#!/bin/bash

#################
#### functions ##
#################

function reset_passenger_userdata {
    local name=$1
    local valu=$2

    echo "TODO: reset userdata that has $name configured with a value is not already $valu"
}

function reset_passenger_setting {
    local name=$1
    local file=$2
    local valu=$3

    echo "Resetting $name setting to $valu"
    echo -n $valu > $file

    reset_passenger_userdata $name $valu
}

function verify_passenger_setting {
    local name=$1
    local have=$2

    echo "Verifying passenger setting for $name"

    if [ -s "/etc/cpanel/ea4/passenger.$name" ]; then
        local curr=$(cat /etc/cpanel/ea4/passenger.$name | tr -d '\n')
        if [ ! -x "$curr" ]; then
            echo "/etc/cpanel/ea4/passenger.$nameâ€™s value is not executable ($curr)";
            if [ "$have" != "" ]; then
                reset_passenger_setting $name /etc/cpanel/ea4/passenger.$name $have
            else
                local defaultpath=$(readlink /etc/cpanel/ea4/passenger.${name}.system-default)
                echo "Could not find $name locally. Passenger apps using it will not work until $defaultpath is installed!"

                if [ "$name" == "ruby" ]; then
                    echo "Passenger itself will not work until until $defaultpath is installed!"
                fi

                reset_passenger_setting $name /etc/cpanel/ea4/passenger.$name $defaultpath
            fi
        fi
    else
        local defaultpath=$(readlink /etc/cpanel/ea4/passenger.${name}.system-default)
        echo "$name is not configured for passenger, using default $defaultpath"
        if [ ! -x "$defaultpath" ]; then
            echo "Could not find $defaultpath locally. Passenger apps using it will not work until $defaultpath is installed!"

            if [ "$name" == "ruby" ]; then
                echo "Passenger itself will not work until until $defaultpath is installed!"
            fi
        fi

        reset_passenger_setting $name /etc/cpanel/ea4/passenger.$name $defaultpath
    fi
}

#####################
#### actual script ##
#####################

# The system defaults may not be present, this is a fallback
# system-default creation, in case the rpm or deb was not able
# to create them

if [ ! -e /etc/cpanel/ea4/passenger.python.system-default ]; then
    if [ -x /usr/bin/python3 ]; then
        ln -s /usr/bin/python3 /etc/cpanel/ea4/passenger.python.system-default
    else
        ln -s /usr/bin/python /etc/cpanel/ea4/passenger.python.system-default
    fi
fi

if [ ! -e /etc/cpanel/ea4/passenger.ruby.system-default ]; then
    ln -s /usr/bin/ruby /etc/cpanel/ea4/passenger.ruby.system-default
fi

if [ ! -e /etc/cpanel/ea4/passenger.node.system-default ]; then
    ln -s /usr/bin/node /etc/cpanel/ea4/passenger.node.system-default
fi

verify_passenger_setting ruby   $(find /usr/bin -name 'ruby*' -executable | sort -r | head -n 1);

echo

verify_passenger_setting python $(find /usr/bin -name 'python*' -executable ! -name "*-config" ! -name "pythonw*" | sort -r | head -n 1)

echo

verify_passenger_setting nodejs $(find /usr/bin -name 'node*' -executable | sort -r | head -n 1)

exit 0
